generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  invoices  Invoice[]
  tasks     Task[]    @relation("UserTasks")
  sentMessages     Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
}

model Invoice {
  id        String   @id @default(cuid())
  name      String
  company   String
  amount    Float
  date      DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  items     Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Item {
  id          String  @id @default(cuid())
  description String
  price       Float
  invoice     Invoice @relation(fields: [invoiceId], references: [id])
  invoiceId   String
}

model Project {
  id          String   @id @default(cuid())
  name        String
  deadline    DateTime
  teamMembers String
  createdBy   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  tasks Task[]
}

model Task {
  id          String   @id @default(cuid())
  name        String
  description String
  difficulty  String
  status      String   @default("todo")
  deadline    DateTime
  projectId   String
  project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)

  userId String?
  user   User?   @relation("UserTasks", fields: [userId], references: [id], onDelete: SetNull)

  timeSpent Int @default(0) // total time spent in seconds
}
model Blog {
  id          String   @id @default(cuid())
  title       String
  description String
  author      String
  images      String[] // array of image URLs
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
model Message {
  id         String   @id @default(cuid())
  content    String
  senderId   String
  receiverId String
  room       String?
  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  createdAt  DateTime @default(now())
}